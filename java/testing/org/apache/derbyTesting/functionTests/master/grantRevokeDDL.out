ij> connect 'grantRevokeDDL;create=true' user 'satheesh' as satConnection;
ij> -- Test table privileges
create table satheesh.tsat(i int not null primary key, j int);
0 rows inserted/updated/deleted
ij> create index tsat_ind on satheesh.tsat(j);
0 rows inserted/updated/deleted
ij> create table satheesh.table1 (a int, b int, c char(10));
0 rows inserted/updated/deleted
ij> grant select on satheesh.tsat to public;
0 rows inserted/updated/deleted
ij> grant insert on satheesh.tsat to foo;
0 rows inserted/updated/deleted
ij> grant delete on satheesh.tsat to foo;
0 rows inserted/updated/deleted
ij> grant update on satheesh.tsat to foo;
0 rows inserted/updated/deleted
ij> grant update(i) on satheesh.tsat to bar;
0 rows inserted/updated/deleted
ij> select * from sys.systableperms;
GRANTEE                                                                                                                         |GRANTOR                                                                                                                         |TABLEID                             |&|&|&|&|&|&
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PUBLIC                                                                                                                          |SATHEESH                                                                                                                        |xxxxFILTERED-UUIDxxxx|y|N|N|N|N|N
FOO                                                                                                                             |SATHEESH                                                                                                                        |xxxxFILTERED-UUIDxxxx|N|y|y|y|N|N
2 rows selected
ij> connect 'grantRevokeDDL' user 'bar' as barConnection;
ij(BARCONNECTION)> -- Following revokes should fail. Only owner can revoke permissions
revoke select on satheesh.tsat from public;
ERROR 2850C: User 'BAR' is not the owner of Table/View 'SATHEESH'.'TSAT'.
ij(BARCONNECTION)> revoke insert on satheesh.tsat from foo;
ERROR 2850C: User 'BAR' is not the owner of Table/View 'SATHEESH'.'TSAT'.
ij(BARCONNECTION)> revoke update(i) on satheesh.tsat from foo;
ERROR 2850C: User 'BAR' is not the owner of Table/View 'SATHEESH'.'TSAT'.
ij(BARCONNECTION)> revoke update on satheesh.tsat from foo;
ERROR 2850C: User 'BAR' is not the owner of Table/View 'SATHEESH'.'TSAT'.
ij(BARCONNECTION)> revoke delete on satheesh.tsat from foo;
ERROR 2850C: User 'BAR' is not the owner of Table/View 'SATHEESH'.'TSAT'.
ij(BARCONNECTION)> set connection satConnection;
ij(SATCONNECTION)> -- Revoke permissions not granted already
revoke trigger on satheesh.tsat from foo;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> revoke references on satheesh.tsat from foo;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> -- Following revokes should revoke permissions
revoke update on satheesh.tsat from foo;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> revoke delete on satheesh.tsat from foo;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> -- Check success by looking at systableperms directly for now
select * from sys.systableperms;
GRANTEE                                                                                                                         |GRANTOR                                                                                                                         |TABLEID                             |&|&|&|&|&|&
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
PUBLIC                                                                                                                          |SATHEESH                                                                                                                        |xxxxFILTERED-UUIDxxxx|y|N|N|N|N|N
FOO                                                                                                                             |SATHEESH                                                                                                                        |xxxxFILTERED-UUIDxxxx|N|N|y|N|N|N
2 rows selected
ij(SATCONNECTION)> revoke insert on satheesh.tsat from foo;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> revoke select on satheesh.tsat from public;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> -- Check success by looking at systableperms directly for now
select * from sys.systableperms;
GRANTEE                                                                                                                         |GRANTOR                                                                                                                         |TABLEID                             |&|&|&|&|&|&
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
0 rows selected
ij(SATCONNECTION)> -- Test routine permissions
CREATE FUNCTION F_ABS(P1 INT)
RETURNS INT
NO SQL
RETURNS NULL ON NULL INPUT
EXTERNAL NAME 'java.lang.Math.abs'
LANGUAGE JAVA PARAMETER STYLE JAVA;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> grant execute on function F_ABS to foo;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> grant execute on function F_ABS(int) to bar;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> revoke execute on function F_ABS(int) from bar RESTRICT;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> drop function f_abs;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> -- Tests with views
create view v1 as select * from tsat;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> grant select on v1 to bar;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> grant insert on v1 to foo;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> grant update on v1 to public;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> -- Tests for synonym. Not supported currently.
create synonym mySym for satheesh.tsat;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> -- Expected to fail
grant select on mySym to bar;
ERROR 42X05: Table 'MYSYM' does not exist.
ij(SATCONNECTION)> grant insert on mySym to foo;
ERROR 42X05: Table 'MYSYM' does not exist.
ij(SATCONNECTION)> -- Test for external security clause
-- Expected to fail
CREATE FUNCTION F_ABS(P1 INT)
RETURNS INT NO SQL
RETURNS NULL ON NULL INPUT
EXTERNAL NAME 'java.lang.Math.abs'
EXTERNAL SECURITY DEFINOR
LANGUAGE JAVA PARAMETER STYLE JAVA;
ERROR 42X01: Syntax error: Encountered "DEFINOR" at line 7, column 19.
ij(SATCONNECTION)> CREATE PROCEDURE AUTH_TEST.addUserUtility(IN userName VARCHAR(50), IN permission VARCHAR(22)) 
LANGUAGE JAVA PARAMETER STYLE JAVA
EXTERNAL SECURITY INVOKER
EXTERNAL NAME 'org.apache.derby.database.UserUtility.add';
0 rows inserted/updated/deleted
ij(SATCONNECTION)> CREATE FUNCTION F_ABS(P1 INT)
RETURNS INT NO SQL
RETURNS NULL ON NULL INPUT
EXTERNAL NAME 'java.lang.Math.abs'
EXTERNAL SECURITY DEFINER
LANGUAGE JAVA PARAMETER STYLE JAVA;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> values f_abs(-5);
1          
-----------
5          
1 row selected
ij(SATCONNECTION)> -- Test for AUTHORIZATION option for create schema
-- GrantRevoke TODO: Need to enforce who can create which schema.
-- More negative test cases need to be added once enforcing is done.
CREATE SCHEMA MYDODO AUTHORIZATION DODO;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> CREATE SCHEMA AUTHORIZATION DERBY;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> select * from sys.sysschemas where schemaname not like 'SYS%';
SCHEMAID                            |SCHEMANAME                                                                                                                      |AUTHORIZATIONID                                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
xxxxFILTERED-UUIDxxxx|NULLID                                                                                                                          |DBA                                                                                                                             
xxxxFILTERED-UUIDxxxx|SQLJ                                                                                                                            |DBA                                                                                                                             
xxxxFILTERED-UUIDxxxx|APP                                                                                                                             |APP                                                                                                                             
xxxxFILTERED-UUIDxxxx|SATHEESH                                                                                                                        |SATHEESH                                                                                                                        
xxxxFILTERED-UUIDxxxx|AUTH_TEST                                                                                                                       |SATHEESH                                                                                                                        
xxxxFILTERED-UUIDxxxx|MYDODO                                                                                                                          |DODO                                                                                                                            
xxxxFILTERED-UUIDxxxx|DERBY                                                                                                                           |DERBY                                                                                                                           
7 rows selected
ij(SATCONNECTION)> -- Now connect as different user and try to do DDLs in schema owned by satheesh
connect 'grantRevokeDDL;user=Swiper' as swiperConnection;
ij(SWIPERCONNECTION)> set schema satheesh;
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> -- All these DDLs should fail.
create table NotMyTable (i int, j int);
ERROR 2850D: User 'SWIPER' can not perform the operation in schema 'SATHEESH'.
ij(SWIPERCONNECTION)> drop table tsat;
ERROR 2850D: User 'SWIPER' can not perform the operation in schema 'SATHEESH'.
ij(SWIPERCONNECTION)> drop index tsat_ind;
ERROR 2850D: User 'SWIPER' can not perform the operation in schema 'SATHEESH'.
ij(SWIPERCONNECTION)> create view myview as select * from satheesh.tsat;
ERROR 2850D: User 'SWIPER' can not perform the operation in schema 'SATHEESH'.
ij(SWIPERCONNECTION)> CREATE FUNCTION FuncNotMySchema(P1 INT)
RETURNS INT NO SQL RETURNS NULL ON NULL INPUT
EXTERNAL NAME 'java.lang.Math.abs'
EXTERNAL SECURITY DEFINER
LANGUAGE JAVA PARAMETER STYLE JAVA;
ERROR 2850D: User 'SWIPER' can not perform the operation in schema 'SATHEESH'.
ij(SWIPERCONNECTION)> alter table tsat add column k int;
ERROR 2850D: User 'SWIPER' can not perform the operation in schema 'SATHEESH'.
ij(SWIPERCONNECTION)> -- Now create own schema
create schema swiper;
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> create table swiper.mytab ( i int, j int);
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> set schema swiper;
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> -- Some simple DML tests. Should all fail.
select * from satheesh.tsat;
ERROR 28508: User 'SWIPER' does not have select permission on column 'I' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> insert into satheesh.tsat values (1, 2);
ERROR 28506: User 'SWIPER' does not have insert permission on table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> update satheesh.tsat set i=j;
ERROR 28508: User 'SWIPER' does not have update permission on column 'I' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> create table my_tsat (i int not null, c char(10), constraint fk foreign key(i) references satheesh.tsat);
ERROR 28508: User 'SWIPER' does not have references permission on column 'I' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> -- Now grant some permissions to swiper
set connection satConnection;
ij(SATCONNECTION)> grant select(i), update(j) on tsat to swiper;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> grant all privileges on table1 to swiper;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> grant references on tsat to swiper;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> set connection swiperConnection;
ij(SWIPERCONNECTION)> -- Now some of these should pass
select * from satheesh.tsat;
ERROR 28508: User 'SWIPER' does not have select permission on column 'J' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> select i from satheesh.tsat;
I          
-----------
0 rows selected
ij(SWIPERCONNECTION)> select i from satheesh.tsat where j=2;
ERROR 28508: User 'SWIPER' does not have select permission on column 'J' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> select i from satheesh.tsat where 2 > (select count(i) from satheesh.tsat);
I          
-----------
0 rows selected
ij(SWIPERCONNECTION)> select i from satheesh.tsat where 2 > (select count(j) from satheesh.tsat);
ERROR 28508: User 'SWIPER' does not have select permission on column 'J' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> select i from satheesh.tsat where 2 > (select count(*) from satheesh.tsat);
I          
-----------
0 rows selected
ij(SWIPERCONNECTION)> update satheesh.tsat set j=j+1;
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> update satheesh.tsat set j=2 where i=2;
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> update satheesh.tsat set j=2 where j=1;
ERROR 28508: User 'SWIPER' does not have select permission on column 'J' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> select * from satheesh.table1;
A          |B          |C         
----------------------------------
0 rows selected
ij(SWIPERCONNECTION)> select c from satheesh.table1 t1, satheesh.tsat t2 where t1.a = t2.i;
C         
----------
0 rows selected
ij(SWIPERCONNECTION)> select b from satheesh.table1 t1, satheesh.tsat t2 where t1.a = t2.j;
ERROR 28508: User 'SWIPER' does not have select permission on column 'J' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> select * from satheesh.table1, (select i from satheesh.tsat) table2;
A          |B          |C         |I          
----------------------------------------------
0 rows selected
ij(SWIPERCONNECTION)> select * from satheesh.table1, (select j from satheesh.tsat) table2;
ERROR 28508: User 'SWIPER' does not have select permission on column 'J' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> -- GrantRevoke TODO: This one should pass, but currently fails. Bind update expression in two steps.
update satheesh.tsat set j=i;
ERROR 28508: User 'SWIPER' does not have update permission on column 'I' of table 'SATHEESH'.'TSAT'.
ij(SWIPERCONNECTION)> create table my_tsat (i int not null, c char(10), constraint fk foreign key(i) references satheesh.tsat);
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> -- Some simple routine tests. See GrantRevoke.java for more tests
set connection satConnection;
ij(SATCONNECTION)> values f_abs(-5);
1          
-----------
5          
1 row selected
ij(SATCONNECTION)> select f_abs(-4) from sys.systables where tablename like 'SYSTAB%';
1          
-----------
4          
4          
2 rows selected
ij(SATCONNECTION)> -- Same tests should fail
set connection swiperConnection;
ij(SWIPERCONNECTION)> set schema satheesh;
0 rows inserted/updated/deleted
ij(SWIPERCONNECTION)> values f_abs(-5);
ERROR 2850A: User 'SWIPER' does not have execute permission on FUNCTION 'SATHEESH'.'F_ABS'.
ij(SWIPERCONNECTION)> select f_abs(-4) from sys.systables where tablename like 'SYSTAB%';
ERROR 2850A: User 'SWIPER' does not have execute permission on FUNCTION 'SATHEESH'.'F_ABS'.
ij(SWIPERCONNECTION)> -- Now grant execute permission and try again
set connection satConnection;
ij(SATCONNECTION)> grant execute on function f_abs to swiper;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> set connection swiperConnection;
ij(SWIPERCONNECTION)> -- Should pass now
values f_abs(-5);
1          
-----------
5          
1 row selected
ij(SWIPERCONNECTION)> select f_abs(-4) from sys.systables where tablename like 'SYSTAB%';
1          
-----------
4          
4          
2 rows selected
ij(SWIPERCONNECTION)> -- Now revoke permission and try
set connection satConnection;
ij(SATCONNECTION)> revoke execute on function f_abs from swiper RESTRICT;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> set connection swiperConnection;
ij(SWIPERCONNECTION)> values f_abs(-5);
ERROR 2850A: User 'SWIPER' does not have execute permission on FUNCTION 'SATHEESH'.'F_ABS'.
ij(SWIPERCONNECTION)> select f_abs(-4) from sys.systables where tablename like 'SYSTAB%';
ERROR 2850A: User 'SWIPER' does not have execute permission on FUNCTION 'SATHEESH'.'F_ABS'.
ij(SWIPERCONNECTION)> -- Now try public permission
set connection satConnection;
ij(SATCONNECTION)> grant execute on function f_abs to public;
0 rows inserted/updated/deleted
ij(SATCONNECTION)> set connection swiperConnection;
ij(SWIPERCONNECTION)> -- Should pass again
values f_abs(-5);
1          
-----------
5          
1 row selected
ij(SWIPERCONNECTION)> select f_abs(-4) from sys.systables where tablename like 'SYSTAB%';
1          
-----------
4          
4          
2 rows selected
ij(SWIPERCONNECTION)> 
